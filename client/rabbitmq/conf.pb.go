// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.1
// source: pkg/client/rabbitmq/conf.proto

package rabbitmq

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RabbitConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Host     string `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Port     int32  `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	VHost    string `protobuf:"bytes,5,opt,name=vHost,proto3" json:"vHost,omitempty"`
	Address  string `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *RabbitConf) Reset() {
	*x = RabbitConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_client_rabbitmq_conf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RabbitConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RabbitConf) ProtoMessage() {}

func (x *RabbitConf) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_client_rabbitmq_conf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RabbitConf.ProtoReflect.Descriptor instead.
func (*RabbitConf) Descriptor() ([]byte, []int) {
	return file_pkg_client_rabbitmq_conf_proto_rawDescGZIP(), []int{0}
}

func (x *RabbitConf) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RabbitConf) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RabbitConf) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *RabbitConf) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *RabbitConf) GetVHost() string {
	if x != nil {
		return x.VHost
	}
	return ""
}

func (x *RabbitConf) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type ConsumerConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Consumer string `protobuf:"bytes,2,opt,name=consumer,proto3" json:"consumer,omitempty"`
}

func (x *ConsumerConf) Reset() {
	*x = ConsumerConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_client_rabbitmq_conf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsumerConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumerConf) ProtoMessage() {}

func (x *ConsumerConf) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_client_rabbitmq_conf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumerConf.ProtoReflect.Descriptor instead.
func (*ConsumerConf) Descriptor() ([]byte, []int) {
	return file_pkg_client_rabbitmq_conf_proto_rawDescGZIP(), []int{1}
}

func (x *ConsumerConf) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConsumerConf) GetConsumer() string {
	if x != nil {
		return x.Consumer
	}
	return ""
}

type ListenerConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rabbit *RabbitConf     `protobuf:"bytes,1,opt,name=rabbit,proto3" json:"rabbit,omitempty"`
	Queues []*ConsumerConf `protobuf:"bytes,2,rep,name=queues,proto3" json:"queues,omitempty"`
}

func (x *ListenerConf) Reset() {
	*x = ListenerConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_client_rabbitmq_conf_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListenerConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenerConf) ProtoMessage() {}

func (x *ListenerConf) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_client_rabbitmq_conf_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenerConf.ProtoReflect.Descriptor instead.
func (*ListenerConf) Descriptor() ([]byte, []int) {
	return file_pkg_client_rabbitmq_conf_proto_rawDescGZIP(), []int{2}
}

func (x *ListenerConf) GetRabbit() *RabbitConf {
	if x != nil {
		return x.Rabbit
	}
	return nil
}

func (x *ListenerConf) GetQueues() []*ConsumerConf {
	if x != nil {
		return x.Queues
	}
	return nil
}

type ProducerConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rabbit      *RabbitConf `protobuf:"bytes,1,opt,name=rabbit,proto3" json:"rabbit,omitempty"`
	ContentType string      `protobuf:"bytes,2,opt,name=contentType,proto3" json:"contentType,omitempty"`
}

func (x *ProducerConf) Reset() {
	*x = ProducerConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_client_rabbitmq_conf_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProducerConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProducerConf) ProtoMessage() {}

func (x *ProducerConf) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_client_rabbitmq_conf_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProducerConf.ProtoReflect.Descriptor instead.
func (*ProducerConf) Descriptor() ([]byte, []int) {
	return file_pkg_client_rabbitmq_conf_proto_rawDescGZIP(), []int{3}
}

func (x *ProducerConf) GetRabbit() *RabbitConf {
	if x != nil {
		return x.Rabbit
	}
	return nil
}

func (x *ProducerConf) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

type ExchangeConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange string `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Key      string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *ExchangeConf) Reset() {
	*x = ExchangeConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_client_rabbitmq_conf_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeConf) ProtoMessage() {}

func (x *ExchangeConf) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_client_rabbitmq_conf_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeConf.ProtoReflect.Descriptor instead.
func (*ExchangeConf) Descriptor() ([]byte, []int) {
	return file_pkg_client_rabbitmq_conf_proto_rawDescGZIP(), []int{4}
}

func (x *ExchangeConf) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *ExchangeConf) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type QueueConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *QueueConf) Reset() {
	*x = QueueConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_client_rabbitmq_conf_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueConf) ProtoMessage() {}

func (x *QueueConf) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_client_rabbitmq_conf_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueConf.ProtoReflect.Descriptor instead.
func (*QueueConf) Descriptor() ([]byte, []int) {
	return file_pkg_client_rabbitmq_conf_proto_rawDescGZIP(), []int{5}
}

func (x *QueueConf) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_pkg_client_rabbitmq_conf_proto protoreflect.FileDescriptor

var file_pkg_client_rabbitmq_conf_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x70, 0x6b, 0x67, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x72, 0x61, 0x62,
	0x62, 0x69, 0x74, 0x6d, 0x71, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x13, 0x70, 0x6b, 0x67, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x72, 0x61, 0x62,
	0x62, 0x69, 0x74, 0x6d, 0x71, 0x22, 0x9c, 0x01, 0x0a, 0x0a, 0x52, 0x61, 0x62, 0x62, 0x69, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x22, 0x3e, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x72, 0x22, 0x82, 0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x37, 0x0a, 0x06, 0x72, 0x61, 0x62, 0x62, 0x69, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x72, 0x61, 0x62, 0x62, 0x69, 0x74, 0x6d, 0x71, 0x2e, 0x52, 0x61, 0x62, 0x62,
	0x69, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x06, 0x72, 0x61, 0x62, 0x62, 0x69, 0x74, 0x12, 0x39,
	0x0a, 0x06, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x72, 0x61, 0x62, 0x62,
	0x69, 0x74, 0x6d, 0x71, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x66, 0x52, 0x06, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x22, 0x69, 0x0a, 0x0c, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x37, 0x0a, 0x06, 0x72, 0x61, 0x62,
	0x62, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x6b, 0x67, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x72, 0x61, 0x62, 0x62, 0x69, 0x74, 0x6d, 0x71, 0x2e,
	0x52, 0x61, 0x62, 0x62, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x06, 0x72, 0x61, 0x62, 0x62,
	0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x3c, 0x0a, 0x0c, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x22, 0x1f, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x75, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x42, 0x22, 0x5a, 0x20, 0x62, 0x6c, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x72, 0x61, 0x62, 0x62, 0x69, 0x74, 0x6d, 0x71, 0x3b, 0x72,
	0x61, 0x62, 0x62, 0x69, 0x74, 0x6d, 0x71, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_client_rabbitmq_conf_proto_rawDescOnce sync.Once
	file_pkg_client_rabbitmq_conf_proto_rawDescData = file_pkg_client_rabbitmq_conf_proto_rawDesc
)

func file_pkg_client_rabbitmq_conf_proto_rawDescGZIP() []byte {
	file_pkg_client_rabbitmq_conf_proto_rawDescOnce.Do(func() {
		file_pkg_client_rabbitmq_conf_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_client_rabbitmq_conf_proto_rawDescData)
	})
	return file_pkg_client_rabbitmq_conf_proto_rawDescData
}

var file_pkg_client_rabbitmq_conf_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_pkg_client_rabbitmq_conf_proto_goTypes = []interface{}{
	(*RabbitConf)(nil),   // 0: pkg.client.rabbitmq.RabbitConf
	(*ConsumerConf)(nil), // 1: pkg.client.rabbitmq.ConsumerConf
	(*ListenerConf)(nil), // 2: pkg.client.rabbitmq.ListenerConf
	(*ProducerConf)(nil), // 3: pkg.client.rabbitmq.ProducerConf
	(*ExchangeConf)(nil), // 4: pkg.client.rabbitmq.ExchangeConf
	(*QueueConf)(nil),    // 5: pkg.client.rabbitmq.QueueConf
}
var file_pkg_client_rabbitmq_conf_proto_depIdxs = []int32{
	0, // 0: pkg.client.rabbitmq.ListenerConf.rabbit:type_name -> pkg.client.rabbitmq.RabbitConf
	1, // 1: pkg.client.rabbitmq.ListenerConf.queues:type_name -> pkg.client.rabbitmq.ConsumerConf
	0, // 2: pkg.client.rabbitmq.ProducerConf.rabbit:type_name -> pkg.client.rabbitmq.RabbitConf
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_pkg_client_rabbitmq_conf_proto_init() }
func file_pkg_client_rabbitmq_conf_proto_init() {
	if File_pkg_client_rabbitmq_conf_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_client_rabbitmq_conf_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RabbitConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_client_rabbitmq_conf_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsumerConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_client_rabbitmq_conf_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListenerConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_client_rabbitmq_conf_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProducerConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_client_rabbitmq_conf_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_client_rabbitmq_conf_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_client_rabbitmq_conf_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_client_rabbitmq_conf_proto_goTypes,
		DependencyIndexes: file_pkg_client_rabbitmq_conf_proto_depIdxs,
		MessageInfos:      file_pkg_client_rabbitmq_conf_proto_msgTypes,
	}.Build()
	File_pkg_client_rabbitmq_conf_proto = out.File
	file_pkg_client_rabbitmq_conf_proto_rawDesc = nil
	file_pkg_client_rabbitmq_conf_proto_goTypes = nil
	file_pkg_client_rabbitmq_conf_proto_depIdxs = nil
}
