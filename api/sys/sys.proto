syntax = "proto3";

package api.sys;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
// import "errors.proto";
import "errors/errors.proto";

option go_package = "github.com/go-bamboo/pkg/api/sys;sys";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
	info: {
		title: "sso服务";
		version: "1.0";
	};
	schemes: HTTP;
	schemes: HTTPS;
	schemes: WSS;
	consumes: "application/json";
	consumes: "application/x-foo-mime";
	produces: "application/json";
	produces: "application/x-foo-mime";
	security_definitions: {
		security: {
			key: "BasicAuth";
			value: {
				type: TYPE_BASIC;
			}
		}
	}
	responses: {
		key: "500";
		value: {
			description: "Server error";
			headers: {
				key: "X-Correlation-Id"
				value: {
					description: "Unique event identifier for server requests"
					type: "string"
					format: "uuid"
					default: "\"2438ac3c-37eb-4902-adef-ed16b4431030\""
					pattern: "^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$"
				}
			};
			schema: {
				json_schema: {
					ref: ".errors.Error";
				}
			}
		}
	}
};

service Sys {
    rpc Auth (AuthRequest) returns (AuthResp) {
        option (google.api.http) = {
            get: "/x/internal/sys/auth"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            summary: "授权";
        };
    };
	rpc CheckResource (CheckResourceRequest) returns (CheckResourceReply) {
        option (google.api.http) = {
            get: "/x/internal/sys/checkcasbin"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            summary: "授权";
        };
    };
	rpc CheckRoleLevel (CheckRoleLevelRequest) returns (CheckRoleLevelReply);
}

message CheckResourceRequest {
    string path = 1 [(validate.rules).string.min_len = 2];
    string method = 2 [(validate.rules).string.min_len = 2];
}
message CheckResourceReply {
    bool ok = 1;
}

message AuthRequest {
    string AccessToken = 1 [(validate.rules).string.min_len = 1];
}
message AuthResp {
    string dataScope = 1;
	uint64 userId = 2;
	uint64 roleId = 3;
    string roleKey = 4;
}

message CheckRoleLevelRequest {
	int32 roleId = 1;
	int32 target = 2;
}
message CheckRoleLevelReply {}